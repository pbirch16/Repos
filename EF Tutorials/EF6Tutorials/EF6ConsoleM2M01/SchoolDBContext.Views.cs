//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(EF6ConsoleM2M01.SchoolDBContext),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets6a2545e343a1f4eb35ae39d91939cc44f4235161d8e5a7329d1ba15d8aa3ca82))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework 6 Power Tools", "0.9.2.0")]
    internal sealed class ViewsForBaseEntitySets6a2545e343a1f4eb35ae39d91939cc44f4235161d8e5a7329d1ba15d8aa3ca82 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "6a2545e343a1f4eb35ae39d91939cc44f4235161d8e5a7329d1ba15d8aa3ca82"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "CodeFirstDatabase.StudentAddress")
            {
                return GetView0();
            }

            if (extentName == "CodeFirstDatabase.Student")
            {
                return GetView1();
            }

            if (extentName == "SchoolDBContext.StudentAddresses")
            {
                return GetView2();
            }

            if (extentName == "SchoolDBContext.Students")
            {
                return GetView3();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.StudentAddress.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StudentAddress
        [CodeFirstDatabaseSchema.StudentAddress](T1.StudentAddress_StudentAddressId, T1.StudentAddress_Address1, T1.StudentAddress_Address2, T1.StudentAddress_City, T1.StudentAddress_Zipcode, T1.StudentAddress_State, T1.StudentAddress_Country)
    FROM (
        SELECT 
            T.StudentAddressId AS StudentAddress_StudentAddressId, 
            T.Address1 AS StudentAddress_Address1, 
            T.Address2 AS StudentAddress_Address2, 
            T.City AS StudentAddress_City, 
            T.Zipcode AS StudentAddress_Zipcode, 
            T.State AS StudentAddress_State, 
            T.Country AS StudentAddress_Country, 
            True AS _from0
        FROM SchoolDBContext.StudentAddresses AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for CodeFirstDatabase.Student.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Student
        [CodeFirstDatabaseSchema.Student](T1.Student_StudentId, T1.Student_StudentName)
    FROM (
        SELECT 
            T.StudentId AS Student_StudentId, 
            T.StudentName AS Student_StudentName, 
            True AS _from0
        FROM SchoolDBContext.Students AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SchoolDBContext.StudentAddresses.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing StudentAddresses
        [EF6ConsoleM2M01.StudentAddress](T1.StudentAddress_StudentAddressId, T1.StudentAddress_Address1, T1.StudentAddress_Address2, T1.StudentAddress_City, T1.StudentAddress_Zipcode, T1.StudentAddress_State, T1.StudentAddress_Country)
    FROM (
        SELECT 
            T.StudentAddressId AS StudentAddress_StudentAddressId, 
            T.Address1 AS StudentAddress_Address1, 
            T.Address2 AS StudentAddress_Address2, 
            T.City AS StudentAddress_City, 
            T.Zipcode AS StudentAddress_Zipcode, 
            T.State AS StudentAddress_State, 
            T.Country AS StudentAddress_Country, 
            True AS _from0
        FROM CodeFirstDatabase.StudentAddress AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for SchoolDBContext.Students.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Students
        [EF6ConsoleM2M01.Student](T1.Student_StudentId, T1.Student_StudentName)
    FROM (
        SELECT 
            T.StudentId AS Student_StudentId, 
            T.StudentName AS Student_StudentName, 
            True AS _from0
        FROM CodeFirstDatabase.Student AS T
    ) AS T1");
        }
    }
}
